// Code generated by mockery v1.0.0. DO NOT EDIT.

package todogroups

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockTodoGroupsServiceServer is an autogenerated mock type for the TodoGroupsServiceServer type
type MockTodoGroupsServiceServer struct {
	mock.Mock
}

// CreateTodoGroup provides a mock function with given fields: _a0, _a1
func (_m *MockTodoGroupsServiceServer) CreateTodoGroup(_a0 context.Context, _a1 *CreateTodoGroupRequest) (*CreateTodoGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *CreateTodoGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *CreateTodoGroupRequest) *CreateTodoGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*CreateTodoGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CreateTodoGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTodoGroup provides a mock function with given fields: _a0, _a1
func (_m *MockTodoGroupsServiceServer) DeleteTodoGroup(_a0 context.Context, _a1 *DeleteTodoGroupRequest) (*DeleteTodoGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *DeleteTodoGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *DeleteTodoGroupRequest) *DeleteTodoGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*DeleteTodoGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *DeleteTodoGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTodoGroup provides a mock function with given fields: _a0, _a1
func (_m *MockTodoGroupsServiceServer) GetTodoGroup(_a0 context.Context, _a1 *GetTodoGroupRequest) (*GetTodoGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetTodoGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetTodoGroupRequest) *GetTodoGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetTodoGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetTodoGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTodoGroups provides a mock function with given fields: _a0, _a1
func (_m *MockTodoGroupsServiceServer) ListTodoGroups(_a0 context.Context, _a1 *ListTodoGroupsRequest) (*ListTodoGroupsResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ListTodoGroupsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *ListTodoGroupsRequest) *ListTodoGroupsResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ListTodoGroupsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ListTodoGroupsRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTodoGroup provides a mock function with given fields: _a0, _a1
func (_m *MockTodoGroupsServiceServer) UpdateTodoGroup(_a0 context.Context, _a1 *UpdateTodoGroupRequest) (*UpdateTodoGroupResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *UpdateTodoGroupResponse
	if rf, ok := ret.Get(0).(func(context.Context, *UpdateTodoGroupRequest) *UpdateTodoGroupResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UpdateTodoGroupResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *UpdateTodoGroupRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
