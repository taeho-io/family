//
// AuthAuthResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class AuthAuthResponse: Codable {

    public var accessToken: String?
    public var accountId: String?
    public var expiresIn: String?
    public var refreshToken: String?


    
    public init(accessToken: String?, accountId: String?, expiresIn: String?, refreshToken: String?) {
        self.accessToken = accessToken
        self.accountId = accountId
        self.expiresIn = expiresIn
        self.refreshToken = refreshToken
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encodeIfPresent(accessToken, forKey: "access_token")
        try container.encodeIfPresent(accountId, forKey: "account_id")
        try container.encodeIfPresent(expiresIn, forKey: "expires_in")
        try container.encodeIfPresent(refreshToken, forKey: "refresh_token")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        accessToken = try container.decodeIfPresent(String.self, forKey: "access_token")
        accountId = try container.decodeIfPresent(String.self, forKey: "account_id")
        expiresIn = try container.decodeIfPresent(String.self, forKey: "expires_in")
        refreshToken = try container.decodeIfPresent(String.self, forKey: "refresh_token")
    }
}

