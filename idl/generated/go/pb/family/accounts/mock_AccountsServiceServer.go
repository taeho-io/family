// Code generated by mockery v1.0.0. DO NOT EDIT.

package accounts

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockAccountsServiceServer is an autogenerated mock type for the AccountsServiceServer type
type MockAccountsServiceServer struct {
	mock.Mock
}

// LogIn provides a mock function with given fields: _a0, _a1
func (_m *MockAccountsServiceServer) LogIn(_a0 context.Context, _a1 *LogInRequest) (*LogInResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *LogInResponse
	if rf, ok := ret.Get(0).(func(context.Context, *LogInRequest) *LogInResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*LogInResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *LogInRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *MockAccountsServiceServer) Register(_a0 context.Context, _a1 *RegisterRequest) (*RegisterResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *RegisterResponse
	if rf, ok := ret.Get(0).(func(context.Context, *RegisterRequest) *RegisterResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*RegisterResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *RegisterRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
