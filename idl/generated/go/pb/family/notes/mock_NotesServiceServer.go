// Code generated by mockery v1.0.0. DO NOT EDIT.

package notes

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockNotesServiceServer is an autogenerated mock type for the NotesServiceServer type
type MockNotesServiceServer struct {
	mock.Mock
}

// CreateNote provides a mock function with given fields: _a0, _a1
func (_m *MockNotesServiceServer) CreateNote(_a0 context.Context, _a1 *CreateNoteRequest) (*CreateNoteResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *CreateNoteResponse
	if rf, ok := ret.Get(0).(func(context.Context, *CreateNoteRequest) *CreateNoteResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*CreateNoteResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *CreateNoteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteNote provides a mock function with given fields: _a0, _a1
func (_m *MockNotesServiceServer) DeleteNote(_a0 context.Context, _a1 *DeleteNoteRequest) (*DeleteNoteResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *DeleteNoteResponse
	if rf, ok := ret.Get(0).(func(context.Context, *DeleteNoteRequest) *DeleteNoteResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*DeleteNoteResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *DeleteNoteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetNote provides a mock function with given fields: _a0, _a1
func (_m *MockNotesServiceServer) GetNote(_a0 context.Context, _a1 *GetNoteRequest) (*GetNoteResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *GetNoteResponse
	if rf, ok := ret.Get(0).(func(context.Context, *GetNoteRequest) *GetNoteResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*GetNoteResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *GetNoteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListNotes provides a mock function with given fields: _a0, _a1
func (_m *MockNotesServiceServer) ListNotes(_a0 context.Context, _a1 *ListNotesRequest) (*ListNotesResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *ListNotesResponse
	if rf, ok := ret.Get(0).(func(context.Context, *ListNotesRequest) *ListNotesResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ListNotesResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *ListNotesRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateNote provides a mock function with given fields: _a0, _a1
func (_m *MockNotesServiceServer) UpdateNote(_a0 context.Context, _a1 *UpdateNoteRequest) (*UpdateNoteResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *UpdateNoteResponse
	if rf, ok := ret.Get(0).(func(context.Context, *UpdateNoteRequest) *UpdateNoteResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*UpdateNoteResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *UpdateNoteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
