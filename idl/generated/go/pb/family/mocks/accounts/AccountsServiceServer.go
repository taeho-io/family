// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import accounts "github.com/taeho-io/family/idl/generated/go/pb/family/accounts"
import context "context"
import mock "github.com/stretchr/testify/mock"

// AccountsServiceServer is an autogenerated mock type for the AccountsServiceServer type
type AccountsServiceServer struct {
	mock.Mock
}

// LogIn provides a mock function with given fields: _a0, _a1
func (_m *AccountsServiceServer) LogIn(_a0 context.Context, _a1 *accounts.LogInRequest) (*accounts.LogInResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *accounts.LogInResponse
	if rf, ok := ret.Get(0).(func(context.Context, *accounts.LogInRequest) *accounts.LogInResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*accounts.LogInResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *accounts.LogInRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Register provides a mock function with given fields: _a0, _a1
func (_m *AccountsServiceServer) Register(_a0 context.Context, _a1 *accounts.RegisterRequest) (*accounts.RegisterResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *accounts.RegisterResponse
	if rf, ok := ret.Get(0).(func(context.Context, *accounts.RegisterRequest) *accounts.RegisterResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*accounts.RegisterResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *accounts.RegisterRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
