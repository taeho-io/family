// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import todos "github.com/taeho-io/family/idl/generated/go/pb/family/todos"

// TodosServiceServer is an autogenerated mock type for the TodosServiceServer type
type TodosServiceServer struct {
	mock.Mock
}

// CreateTodo provides a mock function with given fields: _a0, _a1
func (_m *TodosServiceServer) CreateTodo(_a0 context.Context, _a1 *todos.CreateTodoRequest) (*todos.CreateTodoResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *todos.CreateTodoResponse
	if rf, ok := ret.Get(0).(func(context.Context, *todos.CreateTodoRequest) *todos.CreateTodoResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todos.CreateTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *todos.CreateTodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteTodo provides a mock function with given fields: _a0, _a1
func (_m *TodosServiceServer) DeleteTodo(_a0 context.Context, _a1 *todos.DeleteTodoRequest) (*todos.DeleteTodoResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *todos.DeleteTodoResponse
	if rf, ok := ret.Get(0).(func(context.Context, *todos.DeleteTodoRequest) *todos.DeleteTodoResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todos.DeleteTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *todos.DeleteTodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetTodo provides a mock function with given fields: _a0, _a1
func (_m *TodosServiceServer) GetTodo(_a0 context.Context, _a1 *todos.GetTodoRequest) (*todos.GetTodoResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *todos.GetTodoResponse
	if rf, ok := ret.Get(0).(func(context.Context, *todos.GetTodoRequest) *todos.GetTodoResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todos.GetTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *todos.GetTodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListTodos provides a mock function with given fields: _a0, _a1
func (_m *TodosServiceServer) ListTodos(_a0 context.Context, _a1 *todos.ListTodosRequest) (*todos.ListTodosResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *todos.ListTodosResponse
	if rf, ok := ret.Get(0).(func(context.Context, *todos.ListTodosRequest) *todos.ListTodosResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todos.ListTodosResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *todos.ListTodosRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateTodo provides a mock function with given fields: _a0, _a1
func (_m *TodosServiceServer) UpdateTodo(_a0 context.Context, _a1 *todos.UpdateTodoRequest) (*todos.UpdateTodoResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *todos.UpdateTodoResponse
	if rf, ok := ret.Get(0).(func(context.Context, *todos.UpdateTodoRequest) *todos.UpdateTodoResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*todos.UpdateTodoResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *todos.UpdateTodoRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
