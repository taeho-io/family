//
// AuthServiceAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import RxSwift



open class AuthServiceAPI {
    /**

     - parameter body: (body)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func refresh(body: AuthRefreshRequest, completion: @escaping ((_ data: AuthRefreshResponse?,_ error: Error?) -> Void)) {
        refreshWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }

    /**

     - parameter body: (body)  
     - returns: Observable<AuthRefreshResponse>
     */
    open class func refresh(body: AuthRefreshRequest) -> Observable<AuthRefreshResponse> {
        return Observable.create { observer -> Disposable in
            refresh(body: body) { data, error in
                if let error = error {
                    observer.on(.error(error))
                } else {
                    observer.on(.next(data!))
                }
                observer.on(.completed)
            }
            return Disposables.create()
        }
    }

    /**
     - POST /v1/auth/refreshToken
     - examples: [{contentType=application/json, example={
  "access_token" : "access_token",
  "refresh_token" : "refresh_token",
  "account_id" : "account_id",
  "expires_in" : "expires_in"
}}]
     
     - parameter body: (body)  

     - returns: RequestBuilder<AuthRefreshResponse> 
     */
    open class func refreshWithRequestBuilder(body: AuthRefreshRequest) -> RequestBuilder<AuthRefreshResponse> {
        let path = "/v1/auth/refreshToken"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = NSURLComponents(string: URLString)


        let requestBuilder: RequestBuilder<AuthRefreshResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

}
