syntax = "proto3";

package pb.family.todos;

import "google/api/annotations.proto";

option go_package = "github.com/taeho-io/family/idl/generated/go/pb/family/todos;todos";

service TodosService {
    rpc CreateTodo (CreateTodoRequest) returns (CreateTodoResponse) {
        option (google.api.http) = {
            post: "/v1/todos"
            body: "*"
        };
    }
    rpc GetTodo (GetTodoRequest) returns (GetTodoResponse) {
        option (google.api.http) ={
            get: "/v1/todos/{todo_id}"
        };
    }
    rpc ListTodos (ListTodosRequest) returns (ListTodosResponse) {
        option (google.api.http) ={
            get: "/v1/todos"
        };
    }
    rpc UpdateTodo (UpdateTodoRequest) returns (UpdateTodoResponse) {
        option (google.api.http) = {
            put: "/v1/todos/{todo.todo_id}"
            body: "*"
        };
    }
    rpc DeleteTodo (DeleteTodoRequest) returns (DeleteTodoResponse) {
        option (google.api.http) = {
            delete: "/v1/todos/{todo_id}"
        };
    }
}

enum Status {
    STATUS_TODO = 0;
    STATUS_DONE = 1;
    STATUS_PENDING = 2;
}

enum Priority {
    PRIORITY_NONE = 0;
    PRIORITY_LOW = 10;
    PRIORITY_MEDIUM = 30;
    PRIORITY_HIGH = 50;
    PRIORITY_URGENT = 100;
}

enum ParentType {
    PARENT_TYPE_TODO_GROUP = 0;
    PARENT_TYPE_TODO = 1;
}

message Todo {
    string todo_id = 1;
    ParentType parent_type = 2;
    string parent_id = 3;
    string title = 4;
    string description = 5;
    Status status = 6;
    string order = 7;
    string assigned_to = 8;
    Priority priority = 9;
    repeated Todo sub_tasks = 10;
    int64 created_at = 11;
    int64 updated_at = 12;
    int64 done_at = 13;
    int64 due_at = 14;
}

message CreateTodoRequest {
    Todo todo = 1;
}

message CreateTodoResponse {
    Todo todo = 1;
}

message GetTodoRequest {
    string todo_id = 1;
}

message GetTodoResponse {
    Todo todo = 1;
}

message ListTodosRequest {
    ParentType parent_type = 1;
    string parent_id = 2;
}

message ListTodosResponse {
    repeated Todo todos = 1;
}

enum UpdatingField {
    UPDATING_FIELD_PARENT = 0;
    UPDATING_FIELD_TITLE = 1;
    UPDATING_FIELD_DESCRIPTION = 2;
    UPDATING_FIELD_STATUS = 3;
    UPDATING_FIELD_ORDER = 4;
    UPDATING_FIELD_ASSIGNED_TO = 5;
    UPDATING_FIELD_PRIORITY = 6;
    UPDATING_FIELD_DUE_AT = 7;
}

message UpdateTodoRequest {
    repeated UpdatingField fields = 1;
    Todo todo = 2;
}

message UpdateTodoResponse {
    Todo todo = 1;
}

message DeleteTodoRequest {
    string todo_id = 1;
}

message DeleteTodoResponse {
}
